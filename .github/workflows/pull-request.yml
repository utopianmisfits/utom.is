name: Pull Request

on: pull_request

jobs:
  quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: "12.18.x"

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Check code style with Prettier
        run: npm run check:prettier

      - name: Check code with ESlint
        run: npm run check:eslint

      - name: Compile project with TypeScript
        run: npm run check:tsc

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v1
        with:
          node-version: "12.18.x"

      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Test
        run: npm test

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Build Docker image
        run: docker build -t current .

      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: current

      - name: Login in Github Packages
        run: echo ${{secrets.GITHUB_TOKEN}} | docker login docker.pkg.github.com --username ${GITHUB_ACTOR} --password-stdin

      - name: Tag Docker Image
        run: docker tag current docker.pkg.github.com/utopianmisfits/utom.is/${GITHUB_HEAD_REF##*/}:${GITHUB_SHA::7}

      - name: Publish Docker Image
        run: docker push docker.pkg.github.com/utopianmisfits/utom.is/${GITHUB_HEAD_REF##*/}:${GITHUB_SHA::7}
